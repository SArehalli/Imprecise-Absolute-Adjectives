{
  "_args": [
    [
      "https://github.com/probmods/webppl-viz.git",
      "/home/thatguy/Code/CSLI_2016/bayesian_models/webPPL"
    ]
  ],
  "_from": "git+https://github.com/probmods/webppl-viz.git",
  "_id": "webppl-viz@0.0.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/webppl-viz",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/probmods/webppl-viz/master/package.json",
      "gitUrl": "git://github.com/probmods/webppl-viz.git",
      "httpsUrl": "git+https://github.com/probmods/webppl-viz.git",
      "shortcut": "github:probmods/webppl-viz",
      "ssh": "git@github.com:probmods/webppl-viz.git",
      "sshUrl": "git+ssh://git@github.com/probmods/webppl-viz.git",
      "type": "github"
    },
    "name": null,
    "raw": "https://github.com/probmods/webppl-viz.git",
    "rawSpec": "https://github.com/probmods/webppl-viz.git",
    "scope": null,
    "spec": "git+https://github.com/probmods/webppl-viz.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git+https://github.com/probmods/webppl-viz.git#667b6728b43c68c56043bcdadf3f778fd3169b44",
  "_shasum": "e9e777768d391103fb8d0e341fd0824cd5505fc7",
  "_shrinkwrap": null,
  "_spec": "https://github.com/probmods/webppl-viz.git",
  "_where": "/home/thatguy/Code/CSLI_2016/bayesian_models/webPPL",
  "author": {
    "name": "Long Ouyang"
  },
  "browserify": {
    "transform": [
      [
        "babelify",
        {
          "presets": [
            "react"
          ]
        }
      ]
    ]
  },
  "bugs": {
    "url": "https://github.com/probmods/webppl-viz/issues"
  },
  "dependencies": {
    "babel-preset-react": "^6.5.0",
    "babelify": "^7.2.0",
    "brfs": "^1.4.3",
    "browserify": "^13.0.0",
    "d3": "^3.5.13",
    "jquery": "^2.2.0",
    "md5": "^2.1.0",
    "react": "^15.0.1",
    "react-dom": "^15.0.1",
    "underscore": "^1.8.3",
    "vega": "^2.5.1",
    "vega-lite": "^1.0.8"
  },
  "description": "WebPPL visualization library",
  "devDependencies": {
    "aws-sdk": "^2.4.2",
    "browserify": "^13.0.0",
    "browserify-shim": "^3.8.12",
    "browserify-versionify": "^1.0.6",
    "closure-linter-wrapper": "^1.0.1",
    "grunt": "^0.4.5",
    "grunt-contrib-clean": "^1.0.0",
    "grunt-contrib-jshint": "^1.0.0",
    "grunt-contrib-nodeunit": "^1.0.0",
    "grunt-contrib-watch": "^1.0.0",
    "grunt-gjslint": "^0.2.1",
    "grunt-subgrunt": "^1.2.0",
    "jstransform": "^11.0.3",
    "open": "0.0.5",
    "through": "^2.3.8",
    "watchify": "^3.7.0",
    "webppl": "github:probmods/webppl#8941a5",
    "webppl-editor": "github:probmods/webppl-editor#b69f4f4"
  },
  "gitHead": "667b6728b43c68c56043bcdadf3f778fd3169b44",
  "homepage": "https://github.com/probmods/webppl-viz",
  "license": "MIT",
  "main": "src/index.js",
  "name": "webppl-viz",
  "optionalDependencies": {},
  "readme": "WebPPL visualization library\n\nDemo: http://probmods.github.io/webppl-viz/\n\nDependencies:\n\n- webppl (0.7.0-a57eea7 or later)\n- webppl-editor (eeb3208 or later)\n\nUsage:\n\n- Browser: include webppl-viz.js and webppl-viz.css in your web page.\n- Command-line: require as a [WebPPL package](http://docs.webppl.org/en/master/packages.html#webppl-packages)\n\n### Basic functions\n\n#### Table\n\nShows an ERP as a textual table.\n\nFunction signatures:\n\n- `viz.table(erp, [options])`\n- `viz.table(samples, [options])`\n\nOptions:\n\n- `log` (default = false). If true, shows log probabilities.\n- `top` (default = false). If a number n, only shows top n results.\n\n#### Bar chart\n\nFunction signatures:\n\n- `viz.bar(df, [options])`\n- `viz.bar(xs, ys, [options])`\n\nOptions:\n\n- `horizontal` (default: false). Draw a horizontal bar chart rather than vertical one. (TODO)\n- `xLabel` (default: x). x axis label.\n- `yLabel` (default: y). y axis label.\n- `xType` (default: nominal). type of x axis (nominal or quantitative).\n- `groupBy` (default: none). Grouping variable for different bars.\n\n#### Histogram\n\nFunction signatures:\n\n- `viz.hist(samples, [options])`\n- `viz.hist(erp, [options])`\n\nOptions:\n\n- `numBins` (defaults to 30). For real-valued data, how many bins to aggregate data into.\n\n#### Line chart\n\nFunction signatures:\n\n- `viz.line(df, [options])`\n- `viz.line(xs, ys, [options])`\n\nOptions:\n\n- `xLabel` (default: x). x axis label.\n- `yLabel` (default: y). y axis label.\n- `groupBy` (default: none). Grouping variable for different lines.\n\n#### Scatter plot\n\nFunction signatures:\n\n- `viz.scatter(xs, ys, [options])`\n- `viz.scatter(df, [options])`\n\nOptions:\n\n- `xLabel` (default: x). x axis label.\n- `yLabel` (default: y). y axis label.\n\n#### Density curve\n\nFunction signatures:\n\n- `viz.density(samples, [options])`\n- `viz.density(erp, [options])` (TODO: save total_count in webppl Histogram.toERP)\n\nOptions:\n\n- `bounds` (default: min and max of the supplied samples). An array of bounds for density estimation\n\n#### Heat map\n\n- `viz.heatMap(samples, [options])`\n- `viz.heatMap(erp, [options])` (TODO: save total_count in webppl Histogram.toERP)\n\n#### Parallel coordinates\n\nTODO: expose this functionality to end users\n\n- `viz.parcoords(erp)`\n\n### Complex functions\n\n#### Marginals\n\n`viz.marginals` shows each component of a joint distribution -- density plots for real components and histograms for categorical components.\n\n#### Automatic visualization\n\n`viz.auto` tries to automatically construct a useful visualization based on the types of the different components in the posterior.\n\nOptions:\n\n- `summarize` (default = false). (TODO) For data with real-valued components, you can either try to show all the data (scatter plot) or summarize by showing a density estimate (heat map). This option has no effect if data is entirely categorical.\n\n##### Data types\n\nFirst, a bit of notation: `c` stands for categorical variables and `r` for real variables (for now, ordinal variables are treated as categorical).\n\nSome examples of types:\n\n| Support element | Type                         | Notes                                              |\n| --------------- | ---------------------------- | -------------------------------------------------- |\n| String          | `c`                          |                                                    |\n| Integer         | `c`                          |                                                    |\n| Real number     | `r`                          |                                                    |\n| Object          | combined types of all values | The type of `{fruit: 'apple', price: 3.6}` is `rc` |\n| Array           | combined types of all values | The type of `[9.2, 8.1, 'candy bar']` is `rrc`     |\n\n\n##### How each type is visualized\n\n- `c`: histogram\n- `r`: density curve\n- `cc`: frequency table\n- `cr`: density curve, colors for different categorical groups\n- `rr`: scatter plot (TODO: add heatmap)\n- `ccc`: trellis frequency table\n- `ccr`: trellis density plot, colors for different categorical groups\n- `crr`: trellis scatter plot (TODO: add trellis heatmap)\n- `rrr+` (3 or more `r`'s): parallel coordinates plot\n- `cccc`: trellis frequency table (TODO)\n- `cccr`: trellis scatter plot (TODO: add trellis heat map)\n- `ccrr`: trellis scatter plot / heat map (TODO)\n- `crrr`: trellis parallel coordinates plot (TODO)\n- `ccrrr`: trellis parallel coordinates plot (TODO)\n\n### Development notes\n\n```sh\ngrunt setup-demo       # make webppl and webppl-editor dependencies for demo\ngrunt bundle           # compile js + minify, make css\ngrunt browserify       # compiling js\ngrunt uglify           # minify js\ngrunt browserify-watch # watchified compile js\ngrunt css              # make css\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/probmods/webppl-viz.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.1",
  "webppl": {
    "wppl": [
      "src/multi.wppl"
    ]
  }
}
