var COST = 2/3
var RATIONALITY = 4

var kdeScore = cache(function(dist, value, sigma) {  
  return Math.log(expectation(Infer({ method: 'MCMC', samples:1000}, function() {
    var x = sample(dist);
    return Math.exp(Gaussian({ mu: x, sigma: sigma }).score(value));
  })));
});

var worldPrior = function() {
    return sample(Gaussian({mu:0.5, sigma:0.3}));
};

var thresholdPrior = function() {
    return sample(Uniform({a:0, b:1}));
};

var utterancePrior = function() {
    var lexicon = ["", "tall", "short"];
    return lexicon[randomInteger(lexicon.length)];
};

var semantics = function(u, w, t) {
    return u == "tall" ? w > t : 
           u == "short"? w < t :
           true;
};
var cost = function(u) {
    return u == ""? 0 : COST;
};

var LiteralListener = cache(function(utterance, threshold) {
    Infer({method: 'rejection', samples:1000},
          function(){
              var world = worldPrior();
              condition(semantics(utterance, world, threshold));
              return world;
          }
    );
});

var L1Speaker = cache(function(world, threshold) {
    Infer({method: 'enumerate'},
          function() {
              var utterance = utterancePrior();
              var utility = kdeScore(LiteralListener(utterance, threshold), world, .05);
              factor(RATIONALITY * (utility - cost(utterance)));
              return utterance;
          }
    );
});

var L1Listener = function(utterance) {
    Infer({method: 'MCMC', samples:1000, burn:200},
          function() {
              var world = worldPrior();
              var threshold = thresholdPrior();
              factor(L1Speaker(world, threshold).score(utterance));
              return {world:world, threshold:threshold};
          }
    );
};
viz.marginals(L1Listener("tall"));

